/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var angular = __webpack_require__(33);
	var ode_ts_client_1 = __webpack_require__(34);
	var ode_ngjs_front_1 = __webpack_require__(35);
	var controller_1 = __webpack_require__(36);
	var TimelineApp = __webpack_require__(38);
	var FlashMsg = __webpack_require__(42);
	var FlashMsgContent = __webpack_require__(44);
	var TimelineSettings = __webpack_require__(45);
	angular.module("app", [ode_ngjs_front_1.OdeModules.getBase(), ode_ngjs_front_1.OdeModules.getI18n(), ode_ngjs_front_1.OdeModules.getUi(), ode_ngjs_front_1.OdeModules.getWidgets()])
	    .controller("appCtrl", ['$scope', controller_1.AppController])
	    .directive("timeline", TimelineApp.DirectiveFactory)
	    .directive("flashMessages", FlashMsg.DirectiveFactory)
	    .directive("flashMessageContent", FlashMsgContent.DirectiveFactory)
	    .directive("timelineSettings", TimelineSettings.DirectiveFactory);
	(0, ode_ngjs_front_1.conf)().Platform.apps.initialize(ode_ts_client_1.APP.TIMELINE);


/***/ }),
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */
/***/ (function(module, exports) {

	module.exports = window.angular;

/***/ }),
/* 34 */
/***/ (function(module, exports) {

	module.exports = window.entcore["ode-ts-client"];

/***/ }),
/* 35 */
/***/ (function(module, exports) {

	module.exports = window.entcore["ode-ngjs-front"];

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
	    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
	    return new (P || (P = Promise))(function (resolve, reject) {
	        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
	        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
	        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
	        step((generator = generator.apply(thisArg, _arguments || [])).next());
	    });
	};
	var __generator = (this && this.__generator) || function (thisArg, body) {
	    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
	    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
	    function verb(n) { return function (v) { return step([n, v]); }; }
	    function step(op) {
	        if (f) throw new TypeError("Generator is already executing.");
	        while (g && (g = 0, op[0] && (_ = 0)), _) try {
	            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
	            if (y = 0, t) op = [op[0] & 2, t.value];
	            switch (op[0]) {
	                case 0: case 1: t = op; break;
	                case 4: _.label++; return { value: op[1], done: false };
	                case 5: _.label++; y = op[1]; op = [0]; continue;
	                case 7: op = _.ops.pop(); _.trys.pop(); continue;
	                default:
	                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
	                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
	                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
	                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
	                    if (t[2]) _.ops.pop();
	                    _.trys.pop(); continue;
	            }
	            op = body.call(thisArg, _);
	        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
	        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
	    }
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.AppController = void 0;
	var ode_ngjs_front_1 = __webpack_require__(35);
	var $ = __webpack_require__(37);
	var AppController = /** @class */ (function () {
	    function AppController() {
	    }
	    // IController implementation
	    AppController.prototype.$onInit = function () {
	        this.initialize();
	        $(function () {
	            $("h2.subtitle").css("display", "");
	        });
	    };
	    AppController.prototype.initialize = function () {
	        return __awaiter(this, void 0, void 0, function () {
	            var platformConf;
	            return __generator(this, function (_a) {
	                platformConf = (0, ode_ngjs_front_1.conf)().Platform;
	                this.me = (0, ode_ngjs_front_1.session)().user;
	                this.currentLanguage = (0, ode_ngjs_front_1.session)().currentLanguage;
	                this.lang = platformConf.idiom;
	                return [2 /*return*/];
	            });
	        });
	    };
	    AppController.prototype.toggleContainer = function (ev, containerId) {
	        $(".list-trigger .trigger").removeClass('on');
	        $(ev.currentTarget).addClass('on');
	        var classFocus = 'focus-' + containerId;
	        $('.container-advanced').removeClass('hide');
	        $('.container-advanced').attr('class', 'container-advanced ' + classFocus);
	        $('.container-advanced-wrapper').on('transitionend webkitTransitionEnd oTransitionEnd', function () {
	            // your event handler
	            $('.container-advanced').addClass('hide');
	        });
	    };
	    return AppController;
	}());
	exports.AppController = AppController;
	;


/***/ }),
/* 37 */
/***/ (function(module, exports) {

	module.exports = $;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
	    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
	    return new (P || (P = Promise))(function (resolve, reject) {
	        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
	        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
	        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
	        step((generator = generator.apply(thisArg, _arguments || [])).next());
	    });
	};
	var __generator = (this && this.__generator) || function (thisArg, body) {
	    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
	    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
	    function verb(n) { return function (v) { return step([n, v]); }; }
	    function step(op) {
	        if (f) throw new TypeError("Generator is already executing.");
	        while (g && (g = 0, op[0] && (_ = 0)), _) try {
	            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
	            if (y = 0, t) op = [op[0] & 2, t.value];
	            switch (op[0]) {
	                case 0: case 1: t = op; break;
	                case 4: _.label++; return { value: op[1], done: false };
	                case 5: _.label++; y = op[1]; op = [0]; continue;
	                case 7: op = _.ops.pop(); _.trys.pop(); continue;
	                default:
	                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
	                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
	                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
	                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
	                    if (t[2]) _.ops.pop();
	                    _.trys.pop(); continue;
	            }
	            op = body.call(thisArg, _);
	        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
	        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
	    }
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.DirectiveFactory = exports.TimelineController = void 0;
	var ode_ngjs_front_1 = __webpack_require__(35);
	var gsap = __webpack_require__(39);
	var ode_ts_client_1 = __webpack_require__(34);
	var $ = __webpack_require__(37);
	var events_1 = __webpack_require__(40);
	/* Controller for the directive */
	var TimelineController = /** @class */ (function () {
	    function TimelineController(tracker) {
	        var _this = this;
	        this.tracker = tracker;
	        this.me = (0, ode_ngjs_front_1.session)().user;
	        this.lang = (0, ode_ngjs_front_1.conf)().Platform.idiom;
	        this.app = ode_ts_client_1.ITimelineFactory.createInstance();
	        this.selectedFilter = {}; // ng-model for filters chip.
	        this.config = {
	            hideAdminv1Link: false
	        };
	        this.userStructure = null;
	        this.userStructures = this.me.structures;
	        this.isAllSelected = false; // ng-model for the "Select All / none" chip
	        this.display = {
	            confirmReport: false
	        };
	        /*
	            actions = {
	                discard = {
	                    label: "timeline.action.discard",
	                    action: (notification) => {
	                        notification.opened = false
	                        notification.discard().done(function() {
	                            notifications.remove(notification)
	                            $scope.$apply()
	                        })
	                    },
	                    condition: () => {
	                        return this.me.workflow.timeline.discardNotification
	                    }
	                } as Action,
	                report: {
	                    label: "timeline.action.report",
	                    doneProperty: 'reported',
	                    doneLabel: 'timeline.action.reported',
	                    action: function(notification) {
	                        $scope.display.confirmReport = true;
	                        $scope.doReport(notif) {
	                            notification.report().done(function() {
	                                notification.reported = true
	                                $scope.$apply()
	                            })
	                        }
	                    },
	                    condition: function(notif) {
	                        return notif.sender && model.me.workflow.timeline.reportNotification
	                    }
	                }  as Action
	            }
	            showActions(notif) {
	                return Object.values( this.actions ).filter( (act:Action) => act.condition(notif) );
	            }
	            toggleNotificationById(id:string, force:boolean){
	                const notif = this.app.notifications.all.find(n=>n._id==id);
	                notif && this.toggleNotification(notif,null,force);
	            }
	            toggleNotification(notification, $event, force:boolean=null){
	                $event && $event.stopPropagation();
	                notification.opened = (force!=null) ? force : !notification.opened;
	            }
	        */
	        /* FIXME mobile swipe events
	        ui.extendSelector.touchEvents('div.notification')
	        const  onBodyClick = (event) => {
	            event.stopPropagation();
	            $('.notification-actions.opened').each((key,value)=>{
	                const id = $(value).closest(".notification").attr('data-notificationid');
	                this.toggleNotificationById(id,false);
	            })
	            $scope.$apply();
	        }
	        var applySwipeEvent() {
	            $('div.notification').off('swipe-left');
	            $('div.notification').off('swipe-right');
	            $("body").off("click",onBodyClick)
	            $('div.notification').on('swipe-left', function(event) {
	                const id = $(event.delegateTarget).attr('data-notificationid');
	                $scope.toggleNotificationById(id,true);
	            })
	            $('div.notification').on('swipe-right', function(event) {
	                const id = $(event.delegateTarget).attr('data-notificationid');
	                $scope.toggleNotificationById(id,false);
	            })
	            $('body').on('click', onBodyClick);
	        }
	    
	        model.on('notifications.change, notificationTypes.change', function(e){
	            applySwipeEvent()
	            if(!$scope.$$phase){
	                $scope.$apply('notifications');
	                $scope.$apply('notificationTypes');
	            }
	        });
	        */
	        this.lightmode = false;
	        this.isCache = false;
	        this.noFiltersSelected = function () {
	            return _this.app.selectedNotificationTypes.length === 0;
	        };
	        if (this.userStructures && this.userStructures.length == 1) {
	            this.userStructure = this.userStructures[0];
	        }
	    }
	    Object.defineProperty(TimelineController.prototype, "isAdml", {
	        get: function () {
	            return this.me.functions && this.me.functions.ADMIN_LOCAL && this.me.functions.ADMIN_LOCAL.scope;
	        },
	        enumerable: false,
	        configurable: true
	    });
	    Object.defineProperty(TimelineController.prototype, "isAdmc", {
	        get: function () {
	            return this.me.functions && this.me.functions.SUPER_ADMIN && this.me.functions.SUPER_ADMIN.scope;
	        },
	        enumerable: false,
	        configurable: true
	    });
	    TimelineController.prototype.showAdminv1Link = function () {
	        return !this.config.hideAdminv1Link;
	    };
	    TimelineController.prototype.showAdminv2HomeLink = function () {
	        return !this.showAdminv1Link() && this.userStructures && this.userStructures.length > 1;
	    };
	    TimelineController.prototype.showAdminv2AlertsLink = function () {
	        return !this.showAdminv1Link() && this.userStructures && this.userStructures.length == 1;
	    };
	    TimelineController.prototype.initialize = function () {
	        return __awaiter(this, void 0, void 0, function () {
	            var admx;
	            var _this = this;
	            return __generator(this, function (_a) {
	                switch (_a.label) {
	                    case 0:
	                        admx = (this.isAdml || this.isAdmc)
	                            // get platform config about admin version to create admin (v1 or v2) link for report notification
	                            ? (0, ode_ngjs_front_1.http)().get('/admin/api/platform/config')
	                                .then(function (res) {
	                                _this.config.hideAdminv1Link = res['hide-adminv1-link'];
	                            })
	                            : Promise.resolve();
	                        return [4 /*yield*/, Promise.all([
	                                this.app.initialize(),
	                                admx
	                            ])];
	                    case 1:
	                        _a.sent();
	                        return [2 /*return*/];
	                }
	            });
	        });
	    };
	    Object.defineProperty(TimelineController.prototype, "canDiscard", {
	        get: function () {
	            return (0, ode_ngjs_front_1.session)().hasWorkflow("org.entcore.timeline.controllers.TimelineController|discardNotification");
	        },
	        enumerable: false,
	        configurable: true
	    });
	    TimelineController.prototype.doDiscard = function (notif) {
	        if (this.canDiscard) {
	            var idx = this.app.notifications.findIndex(function (n) { return n._id === notif._id; });
	            if (idx >= 0) {
	                this.app.notifications.splice(idx, 1);
	                notif.discard();
	                // #50542: Track this event.
	                var evt = events_1.TRACK.NOTIF_DELETE;
	                if (this.tracker.willTrackEvent(evt.CLICK)) {
	                    this.tracker.trackEvent(events_1.TRACK.event, evt.action, evt.CLICK);
	                }
	            }
	        }
	    };
	    TimelineController.prototype.canReport = function (notif) {
	        return notif.model.sender && (0, ode_ngjs_front_1.session)().hasWorkflow("org.entcore.timeline.controllers.TimelineController|reportNotification");
	    };
	    TimelineController.prototype.confirmReport = function (notif) {
	        if (this.canReport(notif)) {
	            this.currentNotification = notif;
	            this.display.confirmReport = true;
	        }
	    };
	    TimelineController.prototype.doReport = function () {
	        var _this = this;
	        // #50542: Track this event.
	        var evt = events_1.TRACK.NOTIF_SIGNAL;
	        if (this.tracker.willTrackEvent(evt.CLICK)) {
	            this.tracker.trackEvent(events_1.TRACK.event, evt.action, evt.CLICK);
	        }
	        this.currentNotification.report().then(function () {
	            _this.currentNotification.model.reported = true;
	            _this.currentNotification = null;
	        });
	    };
	    TimelineController.prototype.showSeeMore = function () {
	        if (this.app.isLoading) {
	            return false;
	        }
	        return this.app.hasMorePage;
	    };
	    TimelineController.prototype.showSeeMoreOnEmpty = function () {
	        try {
	            if (this.app.isLoading) {
	                return false;
	            }
	            return this.isCache && this.app.page === 0 && this.app.notifications.length === 0 && !this.app.hasMorePage;
	        }
	        catch (e) {
	            return false;
	        }
	    };
	    TimelineController.prototype.noResultsWithFilters = function () {
	        return this.app.notifications
	            && this.app.notifications.length === 0
	            && this.app.selectedNotificationTypes.length < this.app.notificationTypes.length
	            && this.app.selectedNotificationTypes.length > 0;
	    };
	    TimelineController.prototype.loadPage = function (force) {
	        return this.app.loadNotifications(force);
	    };
	    /*
	    
	        unactivesFilters(){
	            var unactives = model.notificationTypes.length() - model.notificationTypes.selection().length;
	            return unactives;
	        }
	    
	    */
	    TimelineController.prototype.updateSelectAllChip = function () {
	        this.isAllSelected = this.areAllFiltersOn();
	    };
	    TimelineController.prototype.initFilters = function () {
	        var _this = this;
	        // If the user has not selected any preference, then show all notifications by default.
	        if (!this.app.preferences || typeof this.app.preferences.type === "undefined") {
	            this.app.notificationTypes.forEach(function (type) {
	                _this.selectedFilter[type] = true;
	                _this.app.selectedNotificationTypes.push(type);
	            });
	        }
	        else {
	            // Deactivate all
	            this.app.notificationTypes.forEach(function (type) {
	                _this.selectedFilter[type] = false;
	            });
	            // Then reactivate notifications whose type was explicitely selected by the user.
	            this.app.selectedNotificationTypes.forEach(function (type) {
	                _this.selectedFilter[type] = true;
	            });
	        }
	        this.updateSelectAllChip();
	    };
	    TimelineController.prototype.switchFilter = function (type) {
	        var isSelected = this.selectedFilter[type]; // has just been updated by ng-model
	        var savedIndex = this.app.selectedNotificationTypes.findIndex(function (t) { return t === type; });
	        var evtName = "";
	        if (isSelected && savedIndex === -1) {
	            this.app.selectedNotificationTypes.push(type);
	            this.savePrefsAndReload();
	            if (this.tracker.willTrackEvent(events_1.TRACK.FILTER.SHOW_TYPE)) {
	                evtName = events_1.TRACK.nameForModule(events_1.TRACK.FILTER.SHOW_TYPE, this.translateType(type));
	            }
	        }
	        else if (!isSelected && savedIndex !== -1) {
	            this.app.selectedNotificationTypes.splice(savedIndex, 1);
	            this.savePrefsAndReload();
	            if (this.tracker.willTrackEvent(events_1.TRACK.FILTER.HIDE_TYPE)) {
	                evtName = events_1.TRACK.nameForModule(events_1.TRACK.FILTER.HIDE_TYPE, this.translateType(type));
	            }
	        }
	        this.updateSelectAllChip();
	        // #50542: Track this event.
	        if (evtName.length > 0) {
	            this.tracker.trackEvent(events_1.TRACK.event, events_1.TRACK.FILTER.action, evtName);
	        }
	    };
	    //	public switchingFilters = false;
	    TimelineController.prototype.switchAll = function () {
	        var _this = this;
	        if (this.areAllFiltersOn()) {
	            //Deselect all
	            this.app.selectedNotificationTypes.splice(0);
	            this.app.notificationTypes.forEach(function (type) {
	                _this.selectedFilter[type] = false;
	            });
	            this.isAllSelected = false;
	        }
	        else {
	            //Select all
	            this.app.selectedNotificationTypes.splice(0);
	            this.app.notificationTypes.forEach(function (type) {
	                _this.app.selectedNotificationTypes.push(type);
	                _this.selectedFilter[type] = true;
	            });
	            this.isAllSelected = true;
	        }
	        this.savePrefsAndReload();
	        // #50542: Track this event.
	        var evt = events_1.TRACK.FILTER;
	        if (this.tracker.willTrackEvent(this.isAllSelected ? evt.SHOW_TYPE : evt.HIDE_TYPE)) {
	            this.tracker.trackEvent(events_1.TRACK.event, evt.action, events_1.TRACK.nameForModule(this.isAllSelected ? evt.SHOW_TYPE : evt.HIDE_TYPE, "Tout"));
	        }
	    };
	    TimelineController.prototype.areAllFiltersOn = function () {
	        return (this.app.selectedNotificationTypes.length >= this.app.notificationTypes.length);
	    };
	    TimelineController.prototype.formatDate = function (dateString) {
	        return ode_ngjs_front_1.L10n.moment(dateString).fromNow();
	    };
	    TimelineController.prototype.isEmpty = function () {
	        return this.app.notifications.length === 0
	            && this.areAllFiltersOn();
	    };
	    TimelineController.prototype.getCssType = function (notifType) {
	        notifType = notifType.toLowerCase();
	        // This mapping follows the CSS classes defined at https://support.web-education.net/issues/47239
	        switch (notifType) {
	            case "news": return "actualites";
	            case "collaborativewall": return "collaborative-wall";
	            case "messagerie": return "conversation";
	            case "homeworks": return "cahier-de-texte";
	            case "userbook_motto": return "userbook"; //#45822, motto notifications share the same color as userbook
	            case "userbook_mood": return "userbook"; //#45822, mood  notifications share the same color as userbook
	            default: return notifType;
	        }
	    };
	    TimelineController.prototype.getFilterClass = function (notifType) {
	        return "filter color-app-" + this.getCssType(notifType) + (this.selectedFilter[notifType] ? " active" : "");
	    };
	    TimelineController.prototype.toggleTools = function (event) {
	        $(event.currentTarget.parentNode).toggleClass('open');
	    };
	    TimelineController.prototype.translateType = function (notifType) {
	        notifType = notifType.toLowerCase();
	        return this.lang.translate(notifType === 'timeline' ? notifType + '.notification' : notifType);
	    };
	    /** #50542: Track widgets events.
	     * Widgets emit custom events (see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent)
	     * that are listened to and treated for tracking statistics here.
	     */
	    TimelineController.prototype.trackWidgetActions = function (wrapper) {
	        var _this = this;
	        var open = events_1.TRACK.OPEN_APP;
	        // Last-infos widget tracking
	        if (this.tracker.willTrackEvent(open.FROM_NEWS_LINK)) {
	            wrapper.addEventListener(ode_ngjs_front_1.TrackedActionFromWidget.lastInfos, function (e) {
	                var _a, _b;
	                if (((_a = e.detail) === null || _a === void 0 ? void 0 : _a.open) === "app") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, open.action, open.FROM_NEWS_MORE);
	                }
	                else if (((_b = e.detail) === null || _b === void 0 ? void 0 : _b.open) === "info") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, open.action, open.FROM_NEWS_LINK);
	                }
	            });
	        }
	        // Agenda widget
	        if (this.tracker.willTrackEvent(open.FROM_AGENDA_MORE)
	            || this.tracker.willTrackEvent(open.FROM_AGENDA_EVENT)) {
	            wrapper.addEventListener(ode_ngjs_front_1.TrackedActionFromWidget.agenda, function (e) {
	                var _a, _b;
	                if (((_a = e.detail) === null || _a === void 0 ? void 0 : _a.open) === "app") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, open.action, open.FROM_AGENDA_MORE);
	                }
	                else if (((_b = e.detail) === null || _b === void 0 ? void 0 : _b.open) === "event") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, open.action, open.FROM_AGENDA_EVENT);
	                }
	            });
	        }
	        // Myapps widget
	        if (this.tracker.willTrackEvent(open.FROM_MYAPPS_WIDGET)
	            || this.tracker.willTrackEvent(open.FROM_MYAPPS_WIDGET_MORE)) {
	            wrapper.addEventListener(ode_ngjs_front_1.TrackedActionFromWidget.myApps, function (e) {
	                var _a, _b, _c, _d, _e, _f;
	                if (((_a = e.detail) === null || _a === void 0 ? void 0 : _a.open) === "app" && ((_c = (_b = e.detail) === null || _b === void 0 ? void 0 : _b.app) === null || _c === void 0 ? void 0 : _c.name)) {
	                    var appName = _this.lang.translate((_e = (_d = e.detail) === null || _d === void 0 ? void 0 : _d.app) === null || _e === void 0 ? void 0 : _e.name);
	                    _this.tracker.trackEvent(events_1.TRACK.event, open.action, events_1.TRACK.nameForModule(open.FROM_MYAPPS_WIDGET, appName));
	                }
	                else if (((_f = e.detail) === null || _f === void 0 ? void 0 : _f.open) === "more") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, open.action, open.FROM_MYAPPS_WIDGET_MORE);
	                }
	            });
	        }
	        // School widget
	        if (this.tracker.willTrackEvent(open.FROM_SCHOOL_MY_CLASSES)
	            || this.tracker.willTrackEvent(open.FROM_SCHOOL_TEAM)
	            || this.tracker.willTrackEvent(open.FROM_SCHOOL_DIRECTION)) {
	            wrapper.addEventListener(ode_ngjs_front_1.TrackedActionFromWidget.school, function (e) {
	                var _a, _b, _c, _d, _e, _f;
	                if (((_a = e.detail) === null || _a === void 0 ? void 0 : _a.open) === "student.class" || ((_b = e.detail) === null || _b === void 0 ? void 0 : _b.open) === "teacher.students") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, open.action, open.FROM_SCHOOL_MY_CLASSES);
	                }
	                else if (((_c = e.detail) === null || _c === void 0 ? void 0 : _c.open) === "relative.direction") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, open.action, open.FROM_SCHOOL_DIRECTION);
	                }
	                else if (((_d = e.detail) === null || _d === void 0 ? void 0 : _d.open) === "student.teachers"
	                    || ((_e = e.detail) === null || _e === void 0 ? void 0 : _e.open) === "teacher.teachers"
	                    || ((_f = e.detail) === null || _f === void 0 ? void 0 : _f.open) === "relative.teachers") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, open.action, open.FROM_SCHOOL_TEAM);
	                }
	            });
	        }
	        // School-widget and navbar menu
	        var profile = events_1.TRACK.PROFILE;
	        if (this.tracker.willTrackEvent(profile.FROM_SCHOOL_WIDGET)) {
	            wrapper.addEventListener(ode_ngjs_front_1.TrackedActionFromWidget.school, function (e) {
	                var _a;
	                if (((_a = e.detail) === null || _a === void 0 ? void 0 : _a.open) === "profile") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, profile.action, profile.FROM_SCHOOL_WIDGET);
	                }
	            });
	        }
	        // Record-me widget (audio-recorder)
	        var record = events_1.TRACK.RECORD_SOUND;
	        if (this.tracker.willTrackEvent(record.START)) {
	            wrapper.addEventListener('ode-recorder', function (e) {
	                var _a;
	                if (((_a = e.detail) === null || _a === void 0 ? void 0 : _a.open) === "audio") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, record.action, record.START);
	                }
	            });
	        }
	        // carnet-de-bord widget
	        var carnet = events_1.TRACK.CARNET_DE_BORD;
	        if (this.tracker.willTrackEvent(carnet.NAVIGATE) || this.tracker.willTrackEvent(carnet.REDIRECT)) {
	            wrapper.addEventListener(ode_ngjs_front_1.TrackedActionFromWidget.carnetDeBord, function (e) {
	                var _a, _b;
	                if (typeof ((_a = e.detail) === null || _a === void 0 ? void 0 : _a.open) === "string") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, carnet.action, carnet.REDIRECT);
	                }
	                else if (typeof ((_b = e.detail) === null || _b === void 0 ? void 0 : _b.properties) === "string") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, carnet.action, carnet.NAVIGATE);
	                }
	            });
	        }
	        // Navigation events from Bookmarks widget and more
	        var navigate = events_1.TRACK.NAVIGATE;
	        if (this.tracker.willTrackEvent(navigate.FROM_BOOKMARK)) {
	            wrapper.addEventListener(ode_ngjs_front_1.TrackedActionFromWidget.bookmark, function (e) {
	                var _a;
	                if (typeof ((_a = e.detail) === null || _a === void 0 ? void 0 : _a.open) === "string") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, navigate.action, navigate.FROM_BOOKMARK);
	                }
	            });
	        }
	        if (this.tracker.willTrackEvent(navigate.FROM_RSS)) {
	            wrapper.addEventListener(ode_ngjs_front_1.TrackedActionFromWidget.rss, function (e) {
	                var _a;
	                if (typeof ((_a = e.detail) === null || _a === void 0 ? void 0 : _a.open) === "string") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, navigate.action, navigate.FROM_RSS);
	                }
	            });
	        }
	        if (this.tracker.willTrackEvent(navigate.FROM_QWANT)) {
	            wrapper.addEventListener(ode_ngjs_front_1.TrackedActionFromWidget.qwant, function (e) {
	                var _a, _b;
	                if (((_a = e.detail) === null || _a === void 0 ? void 0 : _a.open) === "qwant" || typeof ((_b = e.detail) === null || _b === void 0 ? void 0 : _b.search) === 'string') {
	                    _this.tracker.trackEvent(events_1.TRACK.event, navigate.action, navigate.FROM_QWANT);
	                }
	            });
	        }
	        // Drag'n'drop events
	        var settings = events_1.TRACK.SETTINGS;
	        if (this.tracker.willTrackEvent(settings.MOVE_WIDGET)) {
	            wrapper.addEventListener("ode-widget-container", function (e) {
	                var _a, _b;
	                if (typeof ((_a = e.detail) === null || _a === void 0 ? void 0 : _a.move) === "string" && typeof ((_b = e.detail) === null || _b === void 0 ? void 0 : _b.to) === "number") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, settings.action, settings.MOVE_WIDGET, e.detail.to);
	                }
	            });
	        }
	    };
	    /** #50542: Track navbar events.
	     * Navbar emit custom events (see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent)
	     * that are listened to and treated for tracking statistics here.
	     */
	    TimelineController.prototype.trackNavbarActions = function (wrapper) {
	        var _this = this;
	        if (this.tracker.willTrackEvent(events_1.TRACK.OPEN_APP.FROM_MENU_MYAPPS)
	            || this.tracker.willTrackEvent(events_1.TRACK.OPEN_APP.FROM_MENU_MYAPPS_MORE)
	            || this.tracker.willTrackEvent(events_1.TRACK.OPEN_APP.FROM_MENU_MYAPPS_APP)
	            || this.tracker.willTrackEvent(events_1.TRACK.OPEN_APP.FROM_MENU_MAIL)
	            || this.tracker.willTrackEvent(events_1.TRACK.OPEN_APP.FROM_MENU_COMMUNITY)
	            || this.tracker.willTrackEvent(events_1.TRACK.HOME.FROM_MENU_HOME)
	            || this.tracker.willTrackEvent(events_1.TRACK.HOME.FROM_LOGO)
	            || this.tracker.willTrackEvent(events_1.TRACK.PROFILE.FROM_MENU_PROFILE)
	            || this.tracker.willTrackEvent(events_1.TRACK.SEARCH.GO)) {
	            wrapper.addEventListener("ode-navbar", function (e) {
	                var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;
	                var track = events_1.TRACK.OPEN_APP; // "Accéder à une appli"
	                if (((_a = e.detail) === null || _a === void 0 ? void 0 : _a.open) === "welcome" && ((_b = e.detail) === null || _b === void 0 ? void 0 : _b.from) === "more") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, track.action, track.FROM_MENU_MYAPPS_MORE);
	                }
	                else if (((_c = e.detail) === null || _c === void 0 ? void 0 : _c.open) === "welcome" && ((_d = e.detail) === null || _d === void 0 ? void 0 : _d.from) === "menu") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, track.action, track.FROM_MENU_MYAPPS);
	                }
	                else if (((_e = e.detail) === null || _e === void 0 ? void 0 : _e.open) === "app" && ((_g = (_f = e.detail) === null || _f === void 0 ? void 0 : _f.app) === null || _g === void 0 ? void 0 : _g.name)) {
	                    var appName = _this.lang.translate((_j = (_h = e.detail) === null || _h === void 0 ? void 0 : _h.app) === null || _j === void 0 ? void 0 : _j.name);
	                    _this.tracker.trackEvent(events_1.TRACK.event, track.action, events_1.TRACK.nameForModule(track.FROM_MENU_MYAPPS_APP, appName));
	                }
	                else if (((_k = e.detail) === null || _k === void 0 ? void 0 : _k.open) === "conversation") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, track.action, track.FROM_MENU_MAIL);
	                }
	                else if (((_l = e.detail) === null || _l === void 0 ? void 0 : _l.open) === "community") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, track.action, track.FROM_MENU_COMMUNITY);
	                }
	                track = events_1.TRACK.HOME; // "Revenir à la page d'accueil"
	                if (((_m = e.detail) === null || _m === void 0 ? void 0 : _m.open) === "timeline" && ((_o = e.detail) === null || _o === void 0 ? void 0 : _o.from) === 'menu') {
	                    _this.tracker.trackEvent(events_1.TRACK.event, track.action, track.FROM_MENU_HOME);
	                }
	                else if (((_p = e.detail) === null || _p === void 0 ? void 0 : _p.open) === "timeline" && ((_q = e.detail) === null || _q === void 0 ? void 0 : _q.from) === 'logo') {
	                    var appName = _this.lang.translate((_s = (_r = e.detail) === null || _r === void 0 ? void 0 : _r.app) === null || _s === void 0 ? void 0 : _s.name);
	                    _this.tracker.trackEvent(events_1.TRACK.event, track.action, track.FROM_LOGO);
	                }
	                track = events_1.TRACK.PROFILE; // "Accéder à mon compte"
	                if (((_t = e.detail) === null || _t === void 0 ? void 0 : _t.open) === "myaccount") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, track.action, track.FROM_MENU_PROFILE);
	                }
	                track = events_1.TRACK.SEARCH; // "Lancer une recherche"
	                if (((_u = e.detail) === null || _u === void 0 ? void 0 : _u.open) === "searchengine") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, track.action, track.GO);
	                }
	            });
	        }
	    };
	    /** #50542: Track pulsar events. */
	    TimelineController.prototype.trackPulsarActions = function () {
	        var _this = this;
	        if (this.tracker.willTrackEvent(events_1.TRACK.DISCOVER.QUICKSTART_START)
	            || this.tracker.willTrackEvent(events_1.TRACK.DISCOVER.QUICKSTART_END)) {
	            document.addEventListener("pulsar", function (e) {
	                var _a, _b;
	                var discover = events_1.TRACK.DISCOVER; // "Home - Quickstart - Clique"
	                if (((_a = e.detail) === null || _a === void 0 ? void 0 : _a.open) == "true") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, discover.action, discover.QUICKSTART_START);
	                }
	                else if (((_b = e.detail) === null || _b === void 0 ? void 0 : _b.open) == "false") {
	                    _this.tracker.trackEvent(events_1.TRACK.event, discover.action, discover.QUICKSTART_END);
	                }
	            });
	        }
	    };
	    return TimelineController;
	}());
	exports.TimelineController = TimelineController;
	;
	/* Directive */
	var Directive = /** @class */ (function () {
	    function Directive() {
	        this.restrict = 'E';
	        this.template = __webpack_require__(41);
	        this.scope = {
	            pickTheme: "="
	        };
	        this.bindToController = true;
	        this.controller = ["odeTracking", TimelineController];
	        this.controllerAs = 'ctrl';
	        this.require = ['timeline'];
	    }
	    Directive.prototype.link = function (scope, elem, attr, controllers) {
	        var ctrl = controllers ? controllers[0] : null;
	        if (!ctrl)
	            return;
	        ctrl.lightmode = attr["lightmode"] == "true" || false;
	        ctrl.isCache = attr["cache"] == "true" || false;
	        ctrl.savePrefsAndReload = function () {
	            return ctrl.app.savePreferences()
	                .then(function () {
	                ctrl.app.notifications.splice(0);
	                ctrl.app.resetPagination();
	                return ctrl.app.loadNotifications();
	            })
	                .then(function () {
	                scope.$apply();
	            });
	        };
	        scope.canRenderUi = false;
	        scope.userStructure = ctrl.userStructure;
	        scope.showAdminv1Link = ctrl.showAdminv1Link.bind(ctrl);
	        scope.showAdminv2HomeLink = ctrl.showAdminv2HomeLink.bind(ctrl);
	        scope.showAdminv2AlertsLink = ctrl.showAdminv2AlertsLink.bind(ctrl);
	        // In lightmode, don't load nor show the notifications.
	        if (ctrl.lightmode) {
	            scope.canRenderUi = true;
	        }
	        else {
	            Promise.all([
	                ctrl.lang.addBundlePromise('/timeline/i18nNotifications?mergeall=true'),
	                ctrl.initialize()
	            ])
	                .then(function () { return ctrl.initFilters(); })
	                .then(function () { return ctrl.loadPage(); })
	                .then(function () {
	                scope.canRenderUi = true;
	                scope.$apply();
	                ctrl.handleLoadPageClick = function (force) {
	                    return ctrl.loadPage(force).then(function () { return scope.$apply(); });
	                };
	                // #50542: Track widgets events :
	                var wrapper = document.querySelector("div.container-advanced-wrapper");
	                wrapper && ctrl.trackWidgetActions(wrapper);
	                // #50542: Track navbar events :
	                var navbar = document.querySelector("ode-navbar");
	                navbar && ctrl.trackNavbarActions(navbar);
	                // #50542: Track pulsar events :
	                ctrl.trackPulsarActions();
	                // Only once the UI is up-to-date can we use the gsap animations.
	                // Advanced transitions for filters
	                $('.filter-button').each(function (i) {
	                    var target = '#' + $(this).data('target');
	                    var filterTween = gsap.gsap.timeline().reversed(true).pause();
	                    filterTween.from(target, { duration: 0.8, height: 1, autoAlpha: 0, ease: "sin.inOut", display: 'none' });
	                    filterTween.from(target + " .filter", {
	                        duration: 0.4,
	                        autoAlpha: 0,
	                        translateY: '10px',
	                        ease: "power1.inOut",
	                        stagger: {
	                            amount: 0.6,
	                            ease: "sin.in",
	                        }
	                    }, "-=0.8");
	                    $(target).data('tween', filterTween);
	                });
	                $('.filter-button').on('click', function (e) {
	                    var evt = events_1.TRACK.FILTER;
	                    var target = '#' + $(this).data('target');
	                    if ($(target).data("tween").reversed()) {
	                        $(target).data("tween").play();
	                        // #50542: Track this event.
	                        if (ctrl.tracker.willTrackEvent(evt.SHOW)) {
	                            ctrl.tracker.trackEvent(events_1.TRACK.event, evt.action, evt.SHOW);
	                        }
	                    }
	                    else {
	                        $(target).data("tween").reverse();
	                        // #50542: Track this event.
	                        if (ctrl.tracker.willTrackEvent(evt.HIDE)) {
	                            ctrl.tracker.trackEvent(events_1.TRACK.event, evt.action, evt.HIDE);
	                        }
	                    }
	                });
	            });
	        } // end if !ctrl.lightmode
	    };
	    return Directive;
	}());
	/**
	 * The timeline directive.
	 *
	 * Usage:
	 *   &lt;timeline lightmode="true|false" cache="true|false"></timeline&gt;
	 */
	function DirectiveFactory() {
	    return new Directive();
	}
	exports.DirectiveFactory = DirectiveFactory;


/***/ }),
/* 39 */
/***/ (function(module, exports) {

	module.exports = window;

/***/ }),
/* 40 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.TRACK = void 0;
	/* Tracking events for timeline (home page) */
	exports.TRACK = {
	    event: "Page d'accueil NEO",
	    nameForModule: function (name, variable) {
	        return (variable && variable.length > 0) ? name.replace("[module]", variable) : name;
	    },
	    nameForSkin: function (name, variable) {
	        return (variable && variable.length > 0) ? name.replace("[skin]", variable) : name;
	    },
	    nameForWidget: function (name, variable) {
	        return (variable && variable.length > 0) ? name.replace("[widget]", variable) : name;
	    },
	    nameForLang: function (name, variable) {
	        return (variable && variable.length > 0) ? name.replace("[Langue]", variable) : name;
	    },
	    DISCOVER: { action: "Découvrir l'ENT",
	        QUICKSTART_START: "Home - Quickstart - Clique",
	        QUICKSTART_END: "Home - Quickstart - Terminé"
	    },
	    FILTER: { action: "Filtrer les notifications",
	        SHOW: "Home - Filtrer sur (afficher)",
	        HIDE: "Home - Filtrer sur (masquer)",
	        SHOW_TYPE: "Home - Filtrer sur - [module] (afficher)",
	        HIDE_TYPE: "Home - Filtrer sur - [module] (masquer)"
	    },
	    SETTINGS: { action: "Personnaliser la page d'accueil",
	        OPEN: "Home - Personnaliser",
	        SKIN_CHANGE: "Home - Personnaliser - Mode [skin]",
	        WIDGET_SHOW: "Home - Personnaliser - Afficher widget [widget]",
	        WIDGET_HIDE: "Home - Personnaliser - Masquer widget [widget]",
	        CHANGE_LANG: "Home - Personnaliser - [Langue]",
	        MOVE_WIDGET: "Home - Widget - Changer de place"
	    },
	    PROFILE: { action: "Accéder à mon compte",
	        FROM_SCHOOL_WIDGET: "Home - Widget Profil - Mon profil",
	        FROM_MENU_PROFILE: "Home - Bandeau - Mon compte"
	    },
	    USER: { action: "Accéder à une fiche utilisateur",
	        OPEN_PROFILE: "Home - Notification - Profil utilisateur"
	    },
	    SEARCH: { action: "Lancer une recherche",
	        GO: "Home - Bandeau - Recherche transverse"
	    },
	    NOTIF_SIGNAL: { action: "Signaler une notification",
	        CLICK: "Home - Notification - Signaler"
	    },
	    NOTIF_DELETE: { action: "Supprimer une notification",
	        CLICK: "Home - Notification - Supprimer du fil"
	    },
	    RECORD_SOUND: { action: "Enregistrer du son",
	        START: "Home - Widget Dictaphone - Captation son"
	    },
	    OPEN_APP: { action: "Accéder à une appli",
	        FROM_NEWS_MORE: "Home - Widget Actualité - Vers module Actualité",
	        FROM_NEWS_LINK: "Home - Widget Actualité - Redirection",
	        FROM_AGENDA_MORE: "Home - Widget Agenda - Vers module Agenda",
	        FROM_AGENDA_EVENT: "Home - Widget Agenda - Redirection évènement",
	        FROM_MYAPPS_WIDGET: "Home - Widget Mes applis - [module]",
	        FROM_MYAPPS_WIDGET_MORE: "Home - Widget Mes applis - Plus",
	        FROM_SCHOOL_MY_CLASSES: "Home - Widget Profil - Mes classes",
	        FROM_SCHOOL_TEAM: "Home - Widget Profil - Equipe pédagogique",
	        FROM_SCHOOL_DIRECTION: "Home - Widget Profil - Direction",
	        FROM_NOTIF_LINK: "Home - Notification - Redirection",
	        FROM_MENU_MYAPPS: "Home - Bandeau - Mes applis",
	        FROM_MENU_MYAPPS_MORE: "Home - Bandeau - Mes applis - Plus",
	        FROM_MENU_MYAPPS_APP: "Home - Bandeau - Mes applis - [module]",
	        FROM_MENU_MAIL: "Home - Bandeau - Messagerie",
	        FROM_MENU_COMMUNITY: "Home - Bandeau - Communautés"
	    },
	    HOME: { action: "Revenir à la page d'accueil",
	        FROM_MENU_HOME: "Home - Bandeau - Accueil (maison)",
	        FROM_LOGO: "Home - Bandeau - Accueil (logo)"
	    },
	    NAVIGATE: { action: "Redirection vers l'extérieur",
	        FROM_BOOKMARK: "Home - Widget Signets - Redirection",
	        FROM_QWANT: "Home - Widget Qwant - Mots clefs",
	        FROM_RSS: "Home - Widget RSS - Redirection"
	    },
	    CARNET_DE_BORD: { action: "Accéder à la vie scolaire",
	        NAVIGATE: "Home - Widget Carnet de bord - Navigation",
	        REDIRECT: "Home - Widget Carnet de bord - Redirection"
	    }
	};


/***/ }),
/* 41 */
/***/ (function(module, exports) {

	module.exports = "<div ng-if=\"canRenderUi\">\n\n    <div ng-if=\"ctrl.lightmode\" class=\"emptyscreen\">\n        <h2 class=\"emptyscreen-header\">\n            <i18n>lightmode.timeline.notifications.title</i18n>\n        </h2>\n        <img class=\"emptyscreen-image__mini\" src=\"/timeline/public/img/lightmode-timeline.svg\">\n        <p class=\"emptyscreen-footer\">\n            <i18n>lightmode.timeline.notifications</i18n>\n        </p>\n    </div>\n\n    <div ng-if=\"!ctrl.lightmode\">\n        <div pulsar-highlight=\"1\">\n            <a class=\"filter-button\" href=\"#\" data-target=\"timeline-filter\"\n                pulsar=\"{ index: 1, i18n: 'timeline.pulsar.filters', position: 'bottom center', className: 'pulse-filters'}\">\n            <i18n>filters.title</i18n></a>\n        </div>\n\n        <div class=\"filters filters-chips\" id=\"timeline-filter\">\n            <label class=\"filter color-app-multiselect\"\n                    ng-class=\"{active: ctrl.isAllSelected}\"\n                    ng-if=\"ctrl.app.notificationTypes.length > 0\">\n                <input type=\"checkbox\" class=\"hidden-checkbox\" value=\"test\"\n                    ng-model=\"ctrl.isAllSelected\" \n                    ng-change=\"ctrl.switchAll()\">\n                <!-- div class=\"icon\">\n                    <i class=\"ic-app-multiselect\"></i>\n                </div -->\n                <div class=\"label\"><i18n>filters.all.none</i18n></div>\n            </label>\n\n            <label ng-repeat=\"notifType in ctrl.app.notificationTypes\"\n                ng-class=\"ctrl.getFilterClass(notifType)\">\n                <input type=\"checkbox\" class=\"hidden-checkbox\" value=\"test\"\n                    ng-model=\"ctrl.selectedFilter[notifType]\"\n                    ng-change=\"ctrl.switchFilter(notifType)\">\n                <div class=\"icon\">\n                    <i class=\"ic-app-[[ctrl.getCssType(notifType)]]\"></i>\n                </div>\n                <div class=\"label\">[[ctrl.translateType(notifType)]]</div>\n            </label>\n        </div>\n\n        <div class=\"feed-list\">\n\n            <!--EMPTY BUT NOT ALL FILTERS SELECTED-->\n            <div ng-if=\"ctrl.app.notifications.length === 0 && !ctrl.isAllSelected\">\n                <div class=\"emptyscreen\" ng-if=\"ctrl.isCache && !ctrl.showSeeMoreOnEmpty()\">\n                    <h2 class=\"emptyscreen-header\">\n                        <i18n>empty.timeline.notifications.noresults.title</i18n>\n                    </h2>\n                    <img class=\"emptyscreen-image__mini\" src=\"/assets/themes/theme-open-ent/images/empty-filters.svg\" alt=\"[['empty.timeline.notifications.noresults.title'|i18n]]\">\n                    <p class=\"emptyscreen-footer\">\n                        <i18n>empty.timeline.notifications.noresults</i18n>\n                    </p>\n                </div>\n                <div class=\"info tuto\" ng-if=\"ctrl.isCache && ctrl.showSeeMoreOnEmpty()\">\n                    <b ><span><i></i><i18n>timeline.empty.cache</i18n></span></b>\n                </div>\n            </div>\n            <!--EMPTY BUT ALL FILTERS SELECTED-->\n            <div ng-if=\"ctrl.app.notifications.length === 0 && ctrl.isAllSelected && !ctrl.app.hasMorePage\">\n                <div class=\"emptyscreen\" ng-if=\"ctrl.isCache && !ctrl.showSeeMoreOnEmpty()\">\n                    <h2 class=\"emptyscreen-header\">\n                        <i18n>empty.timeline.notifications.title</i18n>\n                    </h2>\n                    <img class=\"emptyscreen-image__mini\" src=\"/timeline/public/img/empty-timeline.svg\" alt=\"[['empty.timeline.notifications.title'|i18n]]\">\n                    <p class=\"emptyscreen-footer\">\n                        <i18n>empty.timeline.notifications</i18n>\n                    </p>\n                </div>\n                <div class=\"info tuto\" ng-if=\"ctrl.isCache && ctrl.showSeeMoreOnEmpty()\">\n                    <b ><span><i></i><i18n>timeline.empty.cache</i18n></span></b>\n                </div>\n            </div>\n            <!-- Emptyscreen: no notifications -->\n            <div class=\"emptyscreen\" ng-if=\"ctrl.isEmpty() && !ctrl.isCache\">\n                <h2 class=\"emptyscreen-header\">\n                    <i18n>empty.timeline.notifications.title</i18n>\n                </h2>\n                <img class=\"emptyscreen-image__mini\" src=\"/timeline/public/img/empty-timeline.svg\" alt=\"[['empty.timeline.notifications.title'|i18n]]\">\n                <p class=\"emptyscreen-footer\">\n                    <i18n>empty.timeline.notifications</i18n>\n                </p>\n            </div>\n\n            <!-- Emptyscreen: no results with filters -->\n            <div class=\"emptyscreen\" ng-if=\"ctrl.noResultsWithFilters() && !ctrl.isCache\">\n                <h2 class=\"emptyscreen-header\">\n                    <i18n>empty.timeline.notifications.noresults.title</i18n>\n                </h2>\n                <img class=\"emptyscreen-image__mini\" src=\"/assets/themes/theme-open-ent/images/empty-filters.svg\" alt=\"[['empty.timeline.notifications.noresults.title'|i18n]]\">\n                <p class=\"emptyscreen-footer\">\n                    <i18n>empty.timeline.notifications.noresults</i18n>\n                </p>\n            </div>\n\n            <!-- Emptyscreen: no filters selected -->\n            <div class=\"emptyscreen\" ng-if=\"ctrl.noFiltersSelected() && !ctrl.isCache\">\n                <h2 class=\"emptyscreen-header\">\n                    <i18n>empty.timeline.notifications.nofilters.title</i18n>\n                </h2>\n                <img class=\"emptyscreen-image mini\" src=\"/assets/themes/theme-open-ent/images/empty-filters.svg\" alt=\"[['empty.timeline.notifications.nofilters.title'|i18n]]\">\n                <p class=\"emptyscreen-footer\">\n                    <i18n>empty.timeline.notifications.nofilters</i18n>\n                </p>\n            </div>\n\n            <!-- Results -->\n            <div ng-repeat=\"notif in ctrl.app.notifications track by notif._id\">\n                <div class=\"feed-item color-app-[[ctrl.getCssType(notif.model.type)]]\">\n                    <div class=\"zone-avatar\">\n            \n                        <div class=\"avatar-social\">\n                            <div class=\"photo\">\n                                <img alt=\"[[notif.model.params.username]]\" ng-src=\"/userbook/avatar/[[notif.model.sender]]?thumbnail=100x100\" loading=\"lazy\" width=\"60\" height=\"60\" ng-if=\"notif.model.sender\" />\n                                <img alt=\"system\" skin-src=\"/img/illustrations/system-avatar.svg\" ng-if=\"!notif.model.sender\" />\n                            </div>\n            \n                            <div class=\"circle bg-app-[[ctrl.getCssType(notif.model.type)]]\">\n                                <i class=\"ic-app-[[ctrl.getCssType(notif.model.type)]]\"></i>\n                            </div>\n                        </div>\n            \n                    </div>\n\n                    <div class=\"zone-text\">\n            \n                        <div class=\"meta\">\n                            <div class=\"app-name\">[[ctrl.translateType(notif.model.type)]]</div>\n                            <div class=\"date\">[[ctrl.formatDate(notif.model.date.$date)]]</div>\n                        </div>\n            \n                        <!--\n                        <div class=\"username\">\n                            <a class=\"link-discret\" href=\"[[notif.model.params.uri]]\">[[notif.model.params.username]]</a> - enseignant, Mathématiques\n                        </div>\n                        -->\n            \n                        <div class=\"report\" bind-html=\"notif.model.message\"></div>\n                    </div>\n\n                    <div class=\"zone-tools\">\n                        <div class=\"control\" ng-click=\"ctrl.toggleTools($event)\"></div>\n                        <a href=\"\" class=\"link\" \n                            ng-if=\"ctrl.canDiscard\"\n                            ng-click=\"ctrl.doDiscard(notif)\"><i class=\"ic-eye-slash\"></i><i18n>timeline.action.discard</i18n></a>\n                        <a href=\"\" class=\"link\"\n                            ng-if=\"ctrl.canReport(notif)\"\n                            ng-click=\"ctrl.confirmReport(notif)\"><i class=\"ic-warning\"></i><i18n>timeline.action.report</i18n></a>\n                    </div>\n\n                </div>        \n            </div>\n\n            <!--SHOW MORE -->\n            <div ng-if=\"ctrl.showSeeMore()\" class=\"text-center\">\n                <button type=\"button\" class=\"btn btn-info\" ng-click=\"ctrl.handleLoadPageClick()\"><i18n>timeline.seeold</i18n></button>\n            </div>\n\n            <div ng-if=\"ctrl.showSeeMoreOnEmpty()\" style=\"justify-content: center;display:flex;\">\n                <button type=\"button\" class=\"btn btn-info\" ng-click=\"ctrl.handleLoadPageClick(true)\"><i18n>timeline.historyold</i18n></button>\n            </div>\n\n            <ode-modal visible=\"ctrl.display.confirmReport\" on-close=\"ctrl.display.confirmReport = false\">\n                <ode-modal-title><i18n>timeline.confirm.report</i18n></ode-modal-title>\n                <ode-modal-body>\n                    <p>\n                        <i18n>timeline.confirm.report.text</i18n>\n                    </p>\n                </ode-modal-body>\n                <ode-modal-footer>\n                    <button type=\"button\" class=\"btn btn-link\" data-dismiss=\"modal\"\n                            ng-click=\"ctrl.display.confirmReport=false\"><i18n>cancel</i18n>\n                    </button>\n                    <button type=\"button\" class=\"btn btn-primary\"\n                            ng-click=\"ctrl.doReport(); ctrl.display.confirmReport=false\">\n                        <i18n>timeline.action.report</i18n>\n                    </button>\n                </ode-modal-footer>\n            </ode-modal>\n\n            <div ng-show=\"ctrl.app.isLoading\" class=\"text-center\">\n                <button class=\"btn btn-link\" type=\"button\" disabled>\n                    <span class=\"spinner-border\" role=\"status\" aria-hidden=\"true\"></span>\n                    <span><i18n>loading</i18n></span>\n                </button>\n            </div>\n\n        </div>\n    </div>\n    \n    <timeline-settings></timeline-settings>\n</div>";

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.DirectiveFactory = exports.FlashMsgController = void 0;
	var ode_ts_client_1 = __webpack_require__(34);
	var ode_ngjs_front_1 = __webpack_require__(35);
	/* Controller for the directive */
	var FlashMsgController = /** @class */ (function () {
	    function FlashMsgController($scope) {
	        this.$scope = $scope;
	    }
	    FlashMsgController.prototype.list = function () {
	        return this.app.loadFlashMessages();
	    };
	    Object.defineProperty(FlashMsgController.prototype, "messages", {
	        get: function () {
	            return this.app.flashMessages;
	        },
	        enumerable: false,
	        configurable: true
	    });
	    FlashMsgController.prototype.dismiss = function (message) {
	        var _this = this;
	        this.app.markAsRead(message).then(function () {
	            _this.app.flashMessages.splice(_this.app.flashMessages.findIndex(function (m) { return m.id === message.id; }), 1);
	            _this.$scope.$apply();
	        });
	    };
	    return FlashMsgController;
	}());
	exports.FlashMsgController = FlashMsgController;
	;
	/* Directive */
	var Directive = /** @class */ (function () {
	    function Directive() {
	        this.restrict = 'E';
	        this.template = __webpack_require__(43);
	        this.scope = {};
	        this.bindToController = true;
	        this.controller = ["$scope", FlashMsgController];
	        this.controllerAs = 'ctrl';
	        this.require = ['flashMessages'];
	    }
	    Directive.prototype.link = function (scope, elem, attr, controllers) {
	        var ctrl = controllers ? controllers[0] : null;
	        if (!ctrl)
	            return;
	        ctrl.app = ode_ts_client_1.ITimelineFactory.createInstance();
	        ode_ts_client_1.NotifyFrameworkFactory.instance().onSessionReady().promise
	            .then(function (userinfo) {
	            ctrl.currentLanguage = (0, ode_ngjs_front_1.session)().currentLanguage;
	            ctrl.list();
	            scope.$apply();
	        });
	    };
	    return Directive;
	}());
	/**
	 * The flash-messages directive.
	 *
	 * Usage:
	 *   &lt;flash-messages></flash-messages&gt;
	 */
	function DirectiveFactory() {
	    return new Directive();
	}
	exports.DirectiveFactory = DirectiveFactory;


/***/ }),
/* 43 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"widget widget-flash\" \n        ng-repeat=\"message in ctrl.messages track by message.id\" \n        ng-class=\"message.color\" \n        ng-style=\"{ 'background-color': message.customColor, '--custom-message-color': message.customColor}\">\n    <div class=\"widget-body\">\n        <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"alert\" aria-label=\"Close\" ng-click=\"ctrl.dismiss(message)\"></button>\n        <div class=\"flash-content\">\n            <p flash-message-content=\"message\"></p>\n            <div ng-if=\"message.signature\" class=\"flash-content-signature mt-3 font-italic\" ng-style=\"{'color': message.signatureColor}\">\n                {{ message.signature }}\n            </div>\n        </div>\n    </div>\n</div>";

/***/ }),
/* 44 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.DirectiveFactory = void 0;
	/* Directive */
	var Directive = /** @class */ (function () {
	    function Directive($compile, $sanitize, richContentSvc, helperSvc) {
	        this.$compile = $compile;
	        this.$sanitize = $sanitize;
	        this.richContentSvc = richContentSvc;
	        this.helperSvc = helperSvc;
	        this.restrict = 'A';
	        this.scope = {
	            message: '=flashMessageContent'
	        };
	        this.require = ["^flashMessages"];
	    }
	    Directive.prototype.link = function (scope, elem, attr, controllers) {
	        var _a;
	        var isExpandableClass = "flash-content-is-expandable";
	        var maxHeightText = 88;
	        var parentCtrl = controllers[0];
	        if (!parentCtrl || !scope.message)
	            return;
	        var messageContent = (_a = scope.message.contents[parentCtrl.currentLanguage]) !== null && _a !== void 0 ? _a : '';
	        this.richContentSvc.apply(this.$sanitize(messageContent), elem, scope);
	        // If needed, limit the height of displayed text, and add a button "See more" which toggles the full message display back and forth.
	        if (this.helperSvc) {
	            scope.isExpandable = true;
	            scope.isFullyExpandable = function () { return scope.isExpandable; };
	            var moreContainer = $("\n\t\t\t\t<div class=\"btn-expand\" ng-click=\"toggleContent()\">\n\t\t\t\t\t<span class=\"btn-expand-inner\">\n\t\t\t\t\t\t<i18n ng-if=\"!isFullyExpandable()\">timeline.flash.message.seemore</i18n>\n\t\t\t\t\t\t<i18n ng-if=\"isFullyExpandable()\">timeline.flash.message.seeless</i18n>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t");
	            var initialHTML_1 = elem.html();
	            var dummyHTML_1 = function () { return elem.find("p").each(function () {
	                $(this).replaceWith($(this).html() + '<br>');
	            }); };
	            if (elem.height() > maxHeightText) {
	                dummyHTML_1();
	                elem.parent().addClass("can-be-truncated");
	                scope.toggleContent = function () {
	                    if (scope.isFullyExpandable()) {
	                        elem.parent().removeClass(isExpandableClass);
	                        scope.isExpandable = false;
	                        dummyHTML_1();
	                    }
	                    else {
	                        elem.parent().addClass(isExpandableClass);
	                        scope.isExpandable = true;
	                        elem.html(initialHTML_1);
	                    }
	                };
	                elem.parent().append(this.$compile(moreContainer)(scope));
	                scope.toggleContent();
	            }
	        }
	    };
	    return Directive;
	}());
	/**
	 * The flash-message-content directive.
	 *
	 * Usage:
	 *   &lt;flash-message-content>The content to display which can be very very long</flash-message-content&gt;
	 */
	function DirectiveFactory($compile, $sanitize, richContentSvc, helperSvc) {
	    return new Directive($compile, $sanitize, richContentSvc, helperSvc);
	}
	exports.DirectiveFactory = DirectiveFactory;
	DirectiveFactory.$inject = ["$compile", "$sanitize", "odeRichContentService", "odeNgHelperService"];


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
	    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
	    return new (P || (P = Promise))(function (resolve, reject) {
	        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
	        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
	        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
	        step((generator = generator.apply(thisArg, _arguments || [])).next());
	    });
	};
	var __generator = (this && this.__generator) || function (thisArg, body) {
	    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
	    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
	    function verb(n) { return function (v) { return step([n, v]); }; }
	    function step(op) {
	        if (f) throw new TypeError("Generator is already executing.");
	        while (g && (g = 0, op[0] && (_ = 0)), _) try {
	            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
	            if (y = 0, t) op = [op[0] & 2, t.value];
	            switch (op[0]) {
	                case 0: case 1: t = op; break;
	                case 4: _.label++; return { value: op[1], done: false };
	                case 5: _.label++; y = op[1]; op = [0]; continue;
	                case 7: op = _.ops.pop(); _.trys.pop(); continue;
	                default:
	                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
	                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
	                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
	                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
	                    if (t[2]) _.ops.pop();
	                    _.trys.pop(); continue;
	            }
	            op = body.call(thisArg, _);
	        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
	        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
	    }
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.DirectiveFactory = exports.Controller = void 0;
	var ode_ts_client_1 = __webpack_require__(34);
	var ode_ngjs_front_1 = __webpack_require__(35);
	var $ = __webpack_require__(37);
	var events_1 = __webpack_require__(40);
	/* Controller for the directive */
	var Controller = /** @class */ (function () {
	    function Controller(themeSvc, tracker) {
	        this.themeSvc = themeSvc;
	        this.tracker = tracker;
	        this.showPanel = false;
	        this.widgets = ode_ts_client_1.WidgetFrameworkFactory.instance().list;
	    }
	    Object.defineProperty(Controller.prototype, "languagePreference", {
	        get: function () {
	            return (0, ode_ngjs_front_1.session)().currentLanguage;
	        },
	        enumerable: false,
	        configurable: true
	    });
	    Controller.prototype.canTogglePanel = function () {
	        var ww = $(window).width();
	        return (typeof ww !== "number" || ww >= 992);
	    };
	    Controller.prototype.togglePanel = function ($event) {
	        this.showPanel = !this.showPanel;
	        // #50542: Track this event.
	        var evt = events_1.TRACK.SETTINGS;
	        if (this.showPanel && this.tracker.willTrackEvent(evt.OPEN)) {
	            this.tracker.trackEvent(events_1.TRACK.event, evt.action, evt.OPEN);
	        }
	    };
	    Controller.prototype.saveTheme = function (skin, $event) {
	        return __awaiter(this, void 0, void 0, function () {
	            var evt, skinName;
	            return __generator(this, function (_a) {
	                switch (_a.label) {
	                    case 0:
	                        this.currentSkinName = skin.displayName;
	                        return [4 /*yield*/, this.themeSvc.setTheme(skin)];
	                    case 1:
	                        _a.sent();
	                        evt = events_1.TRACK.SETTINGS;
	                        if (this.tracker.willTrackEvent(evt.SKIN_CHANGE)) {
	                            skinName = (0, ode_ngjs_front_1.conf)().Platform.idiom.translate(skin.displayName);
	                            this.tracker.trackEvent(events_1.TRACK.event, evt.action, events_1.TRACK.nameForSkin(evt.SKIN_CHANGE, skinName));
	                        }
	                        return [2 /*return*/];
	                }
	            });
	        });
	    };
	    Controller.prototype.toggleWidget = function (widget, $event) {
	        if (!widget.platformConf.mandatory) {
	            widget.userPref.show = !widget.userPref.show;
	            ode_ts_client_1.WidgetFrameworkFactory.instance().saveUserPrefs();
	            // #50542: Track this event.
	            var evt = events_1.TRACK.SETTINGS;
	            var evtName = widget.userPref.show ? evt.WIDGET_SHOW : evt.WIDGET_HIDE;
	            if (this.tracker.willTrackEvent(evtName)) {
	                var widgetName = (0, ode_ngjs_front_1.conf)().Platform.idiom.translate('timeline.settings.' + widget.platformConf.name);
	                this.tracker.trackEvent(events_1.TRACK.event, evt.action, events_1.TRACK.nameForWidget(evtName, widgetName));
	            }
	        }
	    };
	    Controller.prototype.getFlagUrlFor = function (language) {
	        var lang = language.toLocaleLowerCase();
	        // Map between language codes and their corresponding flags name.
	        switch (lang) {
	            case "en":
	                lang = "gb";
	                break;
	            default: break;
	        }
	        return "".concat(this.themeRoot, "/themes/neo/img/icons/flags/").concat(lang, ".svg");
	    };
	    Controller.prototype.saveLang = function (language, $event) {
	        (0, ode_ngjs_front_1.conf)().User.saveLanguage(language).then(function () {
	            location.reload();
	        });
	        // #50542: Track this event.
	        var evt = events_1.TRACK.SETTINGS;
	        if (this.tracker.willTrackEvent(evt.CHANGE_LANG)) {
	            var langName = (0, ode_ngjs_front_1.conf)().Platform.idiom.translate('language.' + language);
	            this.tracker.trackEvent(events_1.TRACK.event, evt.action, events_1.TRACK.nameForLang(evt.CHANGE_LANG, langName));
	        }
	    };
	    ;
	    return Controller;
	}());
	exports.Controller = Controller;
	;
	/* Directive */
	var Directive = /** @class */ (function () {
	    function Directive() {
	        this.restrict = 'E';
	        this.replace = true;
	        this.template = __webpack_require__(46);
	        this.scope = {};
	        this.bindToController = true;
	        this.controller = ["odeThemeHelperService", "odeTracking", Controller];
	        this.controllerAs = 'ctrl';
	        this.require = ['timelineSettings', '^timeline'];
	    }
	    Directive.prototype.link = function (scope, elem, attr, controllers) {
	        return __awaiter(this, void 0, void 0, function () {
	            var ctrl, timelineCtrl;
	            return __generator(this, function (_a) {
	                ctrl = controllers ? controllers[0] : null;
	                timelineCtrl = controllers ? controllers[1] : null;
	                if (!ctrl || !timelineCtrl)
	                    return [2 /*return*/];
	                scope.lang = (0, ode_ngjs_front_1.conf)().Platform.idiom;
	                scope.me = {
	                    hasWorkflow: function (right) {
	                        return (0, ode_ngjs_front_1.session)().hasWorkflow(right);
	                    }
	                };
	                Promise.all([
	                    (0, ode_ngjs_front_1.conf)().Platform.listLanguages(),
	                    (0, ode_ngjs_front_1.conf)().Platform.theme.listThemes(),
	                    ctrl.themeSvc.getBootstrapThemePath()
	                ]).then(function (results) {
	                    ctrl.languages = results[0];
	                    ctrl.skins = results[1];
	                    ctrl.currentSkinName = (0, ode_ngjs_front_1.conf)().Platform.theme.skinName;
	                    ctrl.themeRoot = results[2];
	                    ctrl.safeApply = function (fn) {
	                        var phase = scope.$root.$$phase;
	                        if (phase == '$apply' || phase == '$digest') {
	                            if (typeof (fn) === 'function') {
	                                fn(scope);
	                            }
	                        }
	                        else {
	                            scope.$apply(fn);
	                        }
	                    };
	                    scope.$apply();
	                });
	                return [2 /*return*/];
	            });
	        });
	    };
	    return Directive;
	}());
	/**
	 * The timeline-settings directive.
	 *
	 * Usage:
	 *   &lt;timeline-settings></timeline-settings&gt;
	 */
	function DirectiveFactory() {
	    return new Directive();
	}
	exports.DirectiveFactory = DirectiveFactory;


/***/ }),
/* 46 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"sticky-toolbox\"\n\t\tng-show=\"ctrl.canTogglePanel()\"\n\t\tng-class=\"{ open: ctrl.showPanel }\">\n\n\t<div class=\"link-tool toolbox\"\n\t\t\ti18n-title=\"navbar.tools\"\n\t\t\tpulsar=\"{ index: 2, i18n: 'timeline.pulsar.settings', position: 'center left', className: 'pulse-settings'}\"\n\t\t\tng-click=\"ctrl.togglePanel($event)\">\n\t\t<i class=\"ic-tools\"></i>\n\t</div>\n\n\n\t<div class=\"sticky-toolbox-content\">\n\t\n\t\t<p class=\"sticky-toolbox-title\"><i18n>panel.themes</i18n></p>\n\t\t<div class=\"row buttons-theme\">\n\t\t\t<div class=\"col-6\" ng-repeat=\"skin in ctrl.skins\">\n\t\t\t\t<a href=\"\" class=\"sticky-toolbox-item skin-[[skin.displayName]]\"\n\t\t\t\t\t\tng-class=\"{ selected: ctrl.currentSkinName==skin.displayName }\"\n\t\t\t\t\t\tng-click=\"ctrl.saveTheme(skin, $event)\" >\n\t\t\t\t\t[[lang.translate(skin.displayName)]]\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<p class=\"sticky-toolbox-title\"><i18n>panel.widgets</i18n></p>\n\t\t<div class=\"row buttons-widget\">\n\t\t\t<div class=\"text-center col-3\" ng-repeat=\"widget in ctrl.widgets\" ng-if=\"!widget.platformConf.mandatory\">\n\t\t\t\t<a href=\"#\" class=\"sticky-toolbox-item\"\n\t\t\t\t\t\ttitle=\"[[lang.translate('timeline.settings.'+widget.platformConf.name)]]\"\n\t\t\t\t\t\tng-class=\"{ selected: widget.userPref.show, locked: widget.platformConf.mandatory }\"\n\t\t\t\t\t\tng-click=\"ctrl.toggleWidget(widget, $event)\">\n\t\t\t\t\t<span class=\"inner\">\n\t\t\t\t\t\t<i ng-class=\"ctrl.themeSvc.getWidgetIconClass(widget)\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t\t<small>[[lang.translate('timeline.settings.'+widget.platformConf.name)]]</small>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div ng-if=\"ctrl.languages.length && me.hasWorkflow('org.entcore.timeline.controllers.TimelineController|allowLanguages')\">\n\t\t\t<p class=\"sticky-toolbox-title\"><i18n>panel.languages</i18n></p>\n\t\t\t<div class=\"row buttons-countries\">\n\t\t\t\t<div class=\"col-3\" \n\t\t\t\t\t\tng-repeat=\"language in ctrl.languages\" \n\t\t\t\t\t\tng-click=\"ctrl.saveLang(language, $event)\">\n\t\t\t\t\t<a href=\"#\" class=\"sticky-toolbox-country\"\n\t\t\t\t\t\t\tng-class=\"{ selected: ctrl.languagePreference===language}\">\n\t\t\t\t\t\t<img loading=\"lazy\" class=\"flag\" width=\"100\" height=\"75\" ng-src=\"[[ctrl.getFlagUrlFor(language)]]\" alt=\"\">\n\t\t\t\t\t\t<div>[[lang.translate('language.' + language)]]</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t</div>\n</div>\n";

/***/ })
/******/ ]);
//# sourceMappingURL=application.js.map
